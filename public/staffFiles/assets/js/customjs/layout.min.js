var tooltipTriggerList = []['slice']['call'](document['querySelectorAll']('[data-bs-toggle="tooltip"]'));
var tooltipList = tooltipTriggerList['map'](function (_0x7a55x3) {
    return new bootstrap.Tooltip(_0x7a55x3)
});
var url = window['location'];
$('.sidemenu .nav-item a')['each'](function (_0x7a55x5, _0x7a55x6) {
    if (this['href'] === url['href'] || url['href']['indexOf'](this['href']) === 0) {
        $(this)['parent']()['addClass']('active open');
        $(this)['parents']('.nav-item')['addClass']('active open')
    }
});
var sub = $('.sub-menu');
$['each'](sub, function (_0x7a55x5, _0x7a55x6) {
    let _0x7a55x8 = $(this)['find']('.nav-item')['length'];
    if (_0x7a55x8 == 0) {
        $(this)['parent']()['remove']()
    }
});
var masterMenuSub = $('.master-menu>.sub-menu');
var masterMenu = $('.master-menu');
$['each'](masterMenuSub, function (_0x7a55x5, _0x7a55x6) {
    let _0x7a55xb = $(this)['find']('.nav-item')['length'];
    if (_0x7a55xb == 0) {
        $(this)['parent']()['remove']()
    }
});
$('.table')['magnificPopup']({
    delegate: 'a.a',
    type: 'image',
    removalDelay: 500,
    callbacks: {
        beforeOpen: function () {
            this['st']['image']['markup'] = this['st']['image']['markup']['replace']('mfp-figure', 'mfp-figure mfp-with-anim');
            this['st']['mainClass'] = this['st']['el']['attr']('data-effect')
        }
    },
    closeOnContentClick: true,
    midClick: true
});

document.addEventListener('DOMContentLoaded', function () {
//   var min = 0; // Valor mínimo permitido
//   var max = 999999999999999999999999999999; // Valor máximo permitido

  $['ajaxSetup']({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]')['attr']('content')
        }
    })

  var intTextBoxes = document.querySelectorAll('.intTextBox');
  intTextBoxes.forEach(function (textBox) {
    textBox.addEventListener('input', function (event) {
      var value = event.target.value;
      var regExp = !/^-?\d*$/
      if (!/^\d*$/.test(value)) {
        event.target.value = event.target.oldValue || '';
        event.target.setSelectionRange(event.target.oldSelectionStart, event.target.oldSelectionEnd);
      } else {
        event.target.oldValue = value;
        event.target.oldSelectionStart = event.target.selectionStart;
        event.target.oldSelectionEnd = event.target.selectionEnd;
      }
    });
  });

  var uintTextBoxes = document.querySelectorAll('.uintTextBox');
  uintTextBoxes.forEach(function (textBox) {
    textBox.addEventListener('input', function (event) {
      var value = event.target.value;
      if (!/^\d*$/.test(value)) {
        event.target.value = event.target.oldValue || '';
        event.target.setSelectionRange(event.target.oldSelectionStart, event.target.oldSelectionEnd);
      } else {
        event.target.oldValue = value;
        event.target.oldSelectionStart = event.target.selectionStart;
        event.target.oldSelectionEnd = event.target.selectionEnd;
      }
    });
  });

  var intLimitTextBoxes = document.querySelectorAll('.intLimitTextBox');
  intLimitTextBoxes.forEach(function (textBox) {
    var min = parseInt(textBox.getAttribute('data-min'));
  var max = parseInt(textBox.getAttribute('data-max'));

    textBox.addEventListener('input', function (event) {
      var value = event.target.value;

      if (!/^-?\d+$/.test(value)) {
        event.target.value = '';
      }
    });

    textBox.addEventListener('change', function (event) {
      var value = event.target.value;
      if (value !== '' && (parseInt(value) < min || parseInt(value) > max)) {
        event.target.value = '';
      }
    });
  });

  var floatTextBoxes = document.querySelectorAll('.floatTextBox');
  floatTextBoxes.forEach(function (textBox) {
    textBox.addEventListener('input', function (event) {
      var value = event.target.value;
      if (!/^-?\d*[.,]?\d*$/.test(value)) {
        event.target.value = event.target.oldValue || '';
        event.target.setSelectionRange(event.target.oldSelectionStart, event.target.oldSelectionEnd);
      } else {
        event.target.oldValue = value;
        event.target.oldSelectionStart = event.target.selectionStart;
        event.target.oldSelectionEnd = event.target.selectionEnd;
      }
    });
  });

  var currencyTextBoxes = document.querySelectorAll('.currencyTextBox');
  currencyTextBoxes.forEach(function (textBox) {
    
    textBox.addEventListener('input', function (event) {
        var value = event.target.value;
        if (!/^-?\d*[.,]?\d{0,2}$/.test(value)) {
          event.target.value = '';
        }
      });
  
      textBox.addEventListener('change', function (event) {
        var min = parseInt(textBox.getAttribute('data-min'));
        var max = parseInt(textBox.getAttribute('data-max'));
        var value = event.target.value;
        if (value !== '' && (parseInt(value) < min || parseInt(value) > max)) {
          event.target.value = '';
          event.target.focus();
        }
      });
  });

  var latinTextBoxes = document.querySelectorAll('.latinTextBox');
  latinTextBoxes.forEach(function (textBox) {
    textBox.addEventListener('input', function (event) {
      var value = event.target.value;
      if (!/^[a-z]*$/i.test(value)) {
        event.target.value = event.target.oldValue || '';
        event.target.setSelectionRange(event.target.oldSelectionStart, event.target.oldSelectionEnd);
      } else {
        event.target.oldValue = value;
        event.target.oldSelectionStart = event.target.selectionStart;
        event.target.oldSelectionEnd = event.target.selectionEnd;
      }
    });
  });

  var hexTextBoxes = document.querySelectorAll('.hexTextBox');
  hexTextBoxes.forEach(function (textBox) {
    textBox.addEventListener('input', function (event) {
      var value = event.target.value;
      if (!/^[0-9a-f]*$/i.test(value)) {
        event.target.value = event.target.oldValue || '';
        event.target.setSelectionRange(event.target.oldSelectionStart, event.target.oldSelectionEnd);
      } else {
        event.target.oldValue = value;
        event.target.oldSelectionStart = event.target.selectionStart;
        event.target.oldSelectionEnd = event.target.selectionEnd;
      }
    });
  });
});
socket['on']('connect', function () {
    socket['emit']('user_connected', user_id)
});
socket['on']('sendMesageDebateToClient', (_0x7a55xf) => {
    var _0x7a55x10 = $('.debateNotifications');
    $['each'](_0x7a55xf['members'], function (_0x7a55x11, _0x7a55x6) {
        if (_0x7a55xf['user_id'] == _0x7a55x6['member_id']) {
            $thisData = _0x7a55xf['members'][_0x7a55x11];
            debateItem($thisData, _0x7a55xf)
        }
    })
});
socket['on']('sendNewNotificationToClient', (_0x7a55xf) => {
    $['each'](_0x7a55xf, function (_0x7a55x5, _0x7a55x6) {
        if (user_id == _0x7a55x6['staff_id']) {
            notifyItem(_0x7a55x6)
        }
    })
});

function notifyItem(_0x7a55xf) {
    var _0x7a55x13 = '';
    _0x7a55x13 += '<li>', _0x7a55x13 += '<a href="' + _0x7a55xf['url'] + '">', _0x7a55x13 += '<span class="time">' + _0x7a55xf['timeDiff'] + '</span>', _0x7a55x13 += '<span class="details">', _0x7a55x13 += '<span class="notification-icon circle deepPink-bgcolor"><i class="fa fa-check"></i></span> ' + _0x7a55xf['message'] + ' </span>', _0x7a55x13 += '</a>';
    _0x7a55x13 += '</li>';
    $('.notyNotifications')['prepend'](_0x7a55x13);
    beep(notification_new)
}

function debateItem(_0x7a55x15, _0x7a55xf) {
    var _0x7a55x16 = '';
    _0x7a55x16 += '<li>';
    _0x7a55x16 += '<a href="http://prado.test/staff/applications/view/' + _0x7a55xf['group_id'] + ' ">';
    _0x7a55x16 += '<span class="photo">';
    _0x7a55x16 += '<img src=" ' + _0x7a55x15['member_avatar'] + ' " class="img-circle" alt=""> </span>';
    _0x7a55x16 += '<span class="subject">';
    _0x7a55x16 += '<span class="from"> ' + _0x7a55x15['member_name'] + ' </span>';
    _0x7a55x16 += '<span class="time"> ' + _0x7a55xf['timeDiff'] + ' </span>';
    _0x7a55x16 += '<br>';
    _0x7a55x16 += '<span class="read" id="msgRead"><i class="fa fa-circle text-primary" title="Unread" aria-hidden="true"></i> </span>';
    _0x7a55x16 += '</span>';
    _0x7a55x16 += '<span class="message"> ' + _0x7a55xf['msgStrac'] + ' </span>';
    _0x7a55x16 += '</a>';
    _0x7a55x16 += '</li>';
    var _0x7a55x17 = parseInt($('#new-messages-span')['html']());
    console['log']('actual', _0x7a55x17);
    if (!isNaN(_0x7a55x17)) {
        $('#new-messages-span')['html']((_0x7a55x17 + 1))
    };
    $('.debateNotifications li .message p')['css']({
        'margin-block-start': '0',
        'margin-inline-start': '0'
    });
    $('.debateNotifications')['prepend'](_0x7a55x16);
    beep(message_new)
}